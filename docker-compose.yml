version: '2.1'

services:

  app:
    build: .
    #volumes:
    #  - .:/app
    ports:
    - "8080:8080"
    depends_on:
        db:
          condition: service_healthy
    links:
      - db
    env_file:
    - core.env
    entrypoint: ["/bin/sh", "entrypoint.sh"]

  db:
    image: postgres:10.2
    volumes:
      - postgres_data:/var/lib/postgresl/data/
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 10s
      retries: 3
    env_file:
    - core.env

  # running on a single node for development.
  # prod settings here: https://www.elastic.co/guide/en/elasticsearch/reference/current/docker.html#docker-cli-run-prod-mode
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.2.0
    volumes:
      - 'es_data:/usr/share/elasticsearch/data'
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - bootstrap.memory_lock=true
      - cluster.name=springelasticgenie
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "discovery.type=single-node"
    ulimits:
      memlock:
        soft: -1
        hard: -1

  elastichq:
    image: elastichq/elasticsearch-hq
    ports:
      - "5000:5000"
    links:
      - elasticsearch
    depends_on:
      - elasticsearch

  logstash:
    image: docker.elastic.co/logstash/logstash:7.0.0
    volumes:
      - ./logstash/config-dir:/usr/share/logstash/config-dir
      - ./logstash/drivers/:/usr/share/logstash/drivers
    command: logstash -f /usr/share/logstash/config-dir/logstash.conf
    env_file:
      - core.env
    links:
      - elasticsearch
    depends_on:
      - elasticsearch

  kibana:
    image: docker.elastic.co/kibana/kibana:7.2.0
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEACH_URL=http://elasticsearch:9200
    links:
      - elasticsearch
    depends_on:
      - elasticsearch

volumes:
  postgres_data:
  es_data: